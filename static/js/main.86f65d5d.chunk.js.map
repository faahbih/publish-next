{"version":3,"sources":["assets/img/restore-logo.png","assets/img/bmu-logo.png","assets/img/arrow_upward-black-18dp.svg","assets/img/arrow_downward-black-18dp.svg","assets/img/brightness_1-24px.svg","serviceWorker.ts","containers/Types.ts","store/index.tsx","components/Legend/index.tsx","components/Report/index.tsx","components/Temporal/index.tsx","store/utils.tsx","components/Leaflet/feature.service.ts","components/Leaflet/icons.ts","components/Leaflet/index.tsx","layouts/Main/index.tsx","layouts/Sidebar/SidebarItem.tsx","layouts/Sidebar/SidebarList.tsx","components/Resume/index.tsx","components/SideContent/SideChip.tsx","components/SideContent/SideChipList.tsx","components/SideContent/index.tsx","layouts/Sidebar/index.tsx","layouts/App/index.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","ViewType","TimelineOption","initialState","currentScenario","currentAttribute","currentBorder","currentYear","currentTimelineOption","ABSOLUTE","views","reducer","state","action","type","newStateAddView","view","visible","SCENARIO","name","ATTRIBUTE","BORDER","newViews","map","viewType","newState","viewActive","find","year","option","createContainer","useReducer","Provider","useTrackedState","useDispatch","useUpdate","useStyles","makeStyles","theme","createStyles","root","width","position","right","top","zIndex","breakpoints","down","maxWidth","cardHeader","padding","background","color","textTransform","fontSize","fontWeight","letterSpacing","title","display","justifyContent","marginBottom","Legend","mapProperties","classes","values","Object","keys","value","sort","label","push","icon","fillColor","legendValuesFactory","hasValues","length","Card","className","CardHeader","CardContent","Typography","gutterBottom","key","Icon","style","chartDataFactory","datasetName","datasets","property","labels","F","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","N","Report","open","properties","onClose","React","useState","scroll","descriptionElementRef","useRef","datasetLabels","charts","scenariosNames","validLabels","axis","date","join","replace","forEach","scenarioName","startsWith","hasOwnProperty","scenario","object","x","y","propertyName","found","entry","datasetsFactory","selectedName","index","options","scales","xAxes","scaleLabel","labelString","yAxes","tooltips","mode","callbacks","tooltipItem","datasetIndex","yLabel","toFixed","useEffect","descriptionElement","current","focus","Dialog","fullWidth","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","dividers","variant","align","DialogActions","Button","onClick","bottom","left","slider","spacing","switch","marginLeft","content","alignItems","marginRight","margin","height","TempShadow","marks","TemporalSlider","withStyles","thumb","boxShadow","marginTop","active","valueLabel","track","rail","opacity","mark","markActive","Slider","Temporal","dispatch","sliderValue","setSliderValue","checkedA","checkedB","switchState","setSwitchState","buttonDisabled","setButtonDisabled","handleChangeSlider","event","newSliderValue","timeline","debounce","Number","debounceSlider","FormControlLabel","control","Switch","size","checked","onChange","target","DIFFERENCE","valueOf","IconButton","aria-label","disabled","indexMark","findIndex","sliderEvent","timelineInterval","setInterval","clearInterval","step","valueLabelDisplay","filter","scenarios","FC","NoFC","attributes","Soybean","Cropland","Grassland","borders","backgrounds","DS","CR","LU","FeatureService","Promise","resolve","firstVisible","isViewVisible","description","attribute","biomesLabels","brazilLabels","biomes","brazil","BACKGROUND","url","process","none","unshift","instance","iconPositive","L","iconUrl","require","iconSize","iconAnchor","iconNegative","iconEquals","defaultProperties","default","weight","fillOpacity","userDefinedProperties","lat","lng","zoom","Pampa","Pantanal","Amazonia","Caatinga","Cerrado","geoJSONStyle","feature","propertyValue","Leaflet","dialogOpen","setDialogOpen","featureSelected","setFeatureSelected","onEachFeature","layer","on","featureService","getInstance","getAttriburesBiomes","then","getScenarios","getBorders","getBackgrounds","Map","center","zoomControl","TileLayer","attribution","ZoomControl","GeoJSON","layers","geojson","features","geometry","coords","coordinates","attributesMapper","fieldName","fieldValue","fieldResult","tooltipValue","iconSelected","Marker","Date","getTime","Math","random","Tooltip","direction","offset","permanent","loadAttributes","minZoom","maxZoom","tms","loadTileLayer","Main","SidebarItem","text","CustomIcon","ListItem","button","ListItemIcon","ListItemText","primary","SidebarList","List","LayersIcon","MapIcon","buttonDefault","imgContent","flexDirection","imgBMULogo","imgLogo","contentDialogTitile","Resume","src","Logo","alt","DialogContentText","ref","tabIndex","href","rel","BMULogo","SideChip","props","setActive","tooltip","arrow","Chip","newActive","styleOn","backgroundColorOnActive","border","getStyle","SideChipList","getBackgroundColor","handleClick","chip","cardContent","main","customAccordionSummary","customAccordionDetails","flexWrap","heading","typography","pxToRem","fontWeightMedium","chipSpacing","formControl","minWidth","SideContent","Accordion","defaultExpanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","up","toolbar","mixins","flexGrow","contentInfo","contentInfoText","subtitle","Sidebar","useTheme","setOpen","resumeOpen","setResumeOpen","CssBaseline","AppBar","clsx","Toolbar","edge","Drawer","paper","Divider","App","createMuiTheme","palette","secondary","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.86f65d5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/restore-logo.3f38353f.png\";","module.exports = __webpack_public_path__ + \"static/media/bmu-logo.d3e895f3.png\";","module.exports = __webpack_public_path__ + \"static/media/arrow_upward-black-18dp.83e7f40f.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow_downward-black-18dp.d5832549.svg\";","module.exports = __webpack_public_path__ + \"static/media/brightness_1-24px.250157c5.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export type MapProperties = {\n  lat: number;\n  lng: number;\n  zoom: number;\n  color: {\n    key: string;\n    value: {\n      [name: string]: {\n        color: string;\n        weight: number;\n        fillOpacity: number;\n        fillColor: string;\n      };\n    };\n  };\n};\n\nexport type LegendValue = {\n  icon: string;\n  fillColor: string;\n  label: string;\n};\n\nexport enum ViewType {\n  SCENARIO,\n  ATTRIBUTE,\n  BORDER,\n  BACKGROUND,\n}\n\nexport type View = {\n  name: string;\n  type: ViewType;\n  visible: boolean;\n  description: string;\n  url?: string;\n  data?: GeoJSON.GeoJsonObject;\n};\n\nexport enum TimelineOption {\n  ABSOLUTE = 'Absolute values',\n  DIFFERENCE = 'Difference to 2000',\n}\n","import { TimelineOption, View, ViewType } from 'containers/Types';\nimport { useReducer } from 'react';\nimport { createContainer } from 'react-tracked';\n\n// { [name: string]: any; } | null\nexport type State = {\n  currentScenario: string;\n  currentAttribute: string;\n  currentBorder: string;\n  currentYear: number;\n  currentTimelineOption: TimelineOption;\n  views: View[];\n};\n\ntype Action =\n  | { type: 'ADD_VIEW'; view: View }\n  | { type: 'TOGGLE_VIEW'; viewType: ViewType; name: string; visible: boolean }\n  | { type: 'SET_CURRENT_YEAR'; year: number }\n  | { type: 'SET_TIMELINE_OPTION'; option: TimelineOption };\n\nconst initialState: State = {\n  currentScenario: '',\n  currentAttribute: '',\n  currentBorder: '',\n  currentYear: 2000,\n  currentTimelineOption: TimelineOption.ABSOLUTE,\n  views: [],\n};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'ADD_VIEW':\n      const newStateAddView = {\n        ...state,\n        views: [...state.views, action.view],\n      };\n\n      if (action.view.visible) {\n        if (action.view.type === ViewType.SCENARIO) {\n          newStateAddView.currentScenario = action.view.name;\n        }\n\n        if (action.view.type === ViewType.ATTRIBUTE) {\n          newStateAddView.currentAttribute = action.view.name;\n        }\n\n        if (action.view.type === ViewType.BORDER) {\n          newStateAddView.currentBorder = action.view.name;\n        }\n      }\n\n      return newStateAddView;\n    case 'TOGGLE_VIEW':\n      const resetViews = state.views.map((view) => {\n        if (view.type === action.viewType) {\n          return { ...view, visible: false };\n        }\n\n        return { ...view };\n      });\n\n      const newViews = resetViews.map((view) => {\n        if (view.type === action.viewType && view.name === action.name) {\n          return { ...view, visible: action.visible };\n        }\n\n        return { ...view };\n      });\n\n      const newState = { ...state };\n      const viewActive = newViews.find(\n        (view) => view.type === action.viewType && view.visible,\n      );\n      if (viewActive) {\n        if (viewActive.type === ViewType.SCENARIO) {\n          newState.currentScenario = viewActive.name;\n        }\n\n        if (viewActive.type === ViewType.ATTRIBUTE) {\n          newState.currentAttribute = viewActive.name;\n        }\n\n        if (viewActive.type === ViewType.BORDER) {\n          newState.currentBorder = viewActive.name;\n        }\n\n        newState.views = newViews;\n      }\n\n      return newState;\n    case 'SET_CURRENT_YEAR':\n      return {\n        ...state,\n        currentYear: action.year,\n      };\n    case 'SET_TIMELINE_OPTION':\n      return {\n        ...state,\n        currentTimelineOption: action.option,\n      };\n    default:\n      return state;\n  }\n};\n\nconst useValue = () => useReducer(reducer, initialState);\n\nexport const {\n  Provider,\n  useTrackedState,\n  useUpdate: useDispatch,\n} = createContainer(useValue);\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Icon from '@material-ui/core/Icon';\n// import './style.scss';\n\nimport { Typography } from '@material-ui/core';\nimport { LegendValue, MapProperties } from 'containers/Types';\n\ntype LegendProps = {\n  mapProperties: MapProperties;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 272,\n      position: 'absolute',\n      right: '16px',\n      top: '70px',\n      zIndex: 1100,\n      [theme.breakpoints.down('xs')]: {\n        maxWidth: 180,\n      },\n    },\n    cardHeader: {\n      padding: '8px 16px',\n      background: '#212121',\n      color: 'white',\n      textTransform: 'uppercase',\n      '& span': {\n        fontSize: '16px',\n        fontWeight: 'bold',\n        letterSpacing: '.03em',\n      },\n    },\n    title: {\n      fontSize: 14,\n      display: 'flex',\n      justifyContent: 'center',\n      padding: '8px 0 0',\n      marginBottom: 0,\n    },\n  }),\n);\n\nfunction legendValuesFactory(mapProperties: MapProperties): LegendValue[] {\n  const values: LegendValue[] = [];\n\n  for (const label of Object.keys(mapProperties.color.value).sort()) {\n    const value = mapProperties.color.value[label];\n    values.push({\n      icon: 'fiber_manual_record',\n      fillColor: value.fillColor,\n      label,\n    });\n  }\n\n  return values;\n}\n\nexport default function Legend({ mapProperties }: LegendProps) {\n  const classes = useStyles();\n  const values = legendValuesFactory(mapProperties);\n  const hasValues = !values || !values.length;\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader className={classes.cardHeader} title=\"Legend\" />\n      <CardContent>\n        {hasValues ? (\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            No layers selected\n          </Typography>\n        ) : (\n          <div className=\"Legend\">\n            {values.map((value: LegendValue) => (\n              <div className=\"Legend-content\" key={value.label}>\n                <Icon style={{ color: value.fillColor }}>{value.icon}</Icon>\n                <p className=\"Legend-text\">{value.label}</p>\n              </div>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { Line } from 'react-chartjs-2';\nimport Typography from '@material-ui/core/Typography';\n\ntype ReportProps = {\n  open: boolean;\n  properties?: GeoJSON.GeoJsonProperties;\n  onClose: () => void;\n};\n\nfunction datasetsFactory(\n  properties: GeoJSON.GeoJsonProperties,\n  scenariosNames: string[],\n  validLabels: string[],\n  axis = 'vertical',\n) {\n  const datasets: any = {};\n\n  for (const key in properties) {\n    const value = properties[key];\n\n    let name = key;\n    const date = key.match(/\\d+/g)?.join('');\n    if (date) {\n      name = key.replace(date, '');\n\n      scenariosNames.forEach((scenarioName: string) => {\n        if (name.startsWith(scenarioName)) {\n          name = name.replace(scenarioName, '');\n\n          if (!datasets.hasOwnProperty(name)) {\n            datasets[name] = {};\n          }\n\n          const scenario: any = datasets[name];\n          if (!scenario.hasOwnProperty(scenarioName)) {\n            scenario[scenarioName] = {\n              object: [],\n            };\n          }\n\n          scenario[scenarioName].object.push({ x: date, y: value });\n        }\n      });\n    }\n  }\n\n  for (const propertyName in datasets) {\n    const property = datasets[propertyName];\n\n    for (const scenarioName in property) {\n      const scenario = property[scenarioName];\n      const object = scenario.object as { x: any; y: any }[];\n\n      scenario.labels = [];\n      scenario.data = [];\n      validLabels.forEach((label: string) => {\n        const found = object.find((entry: { x: any; y: any }) =>\n          axis === 'vertical' ? entry.x === label : entry.y === label,\n        );\n        if (found) {\n          const data = axis === 'vertical' ? found.y : found.x;\n          scenario.labels.push(label);\n          scenario.data.push(data);\n        }\n      });\n    }\n  }\n\n  return datasets;\n}\n\nfunction chartDataFactory(\n  datasetName: string,\n  datasets: { [name: string]: any },\n) {\n  const property = datasets[datasetName];\n  const labels = property.F.labels;\n  return {\n    labels,\n    datasets: [\n      {\n        label: 'FC',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(0, 128, 0, 1)',\n        borderColor: 'rgba(0, 128, 0, 1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(0, 128, 0, 1)',\n        pointBackgroundColor: 'rgba(0, 128, 0, 1)',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(0, 128, 0, 1)',\n        pointHoverBorderColor: 'rgba(0, 128, 0, 1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: property.F.data,\n      },\n      {\n        label: 'NoFC',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(235,75,53, 1)',\n        borderColor: 'rgba(235,75,53, 1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(235,75,53, 1)',\n        pointBackgroundColor: 'rgba(235,75,53, 1)',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(235,75,53, 1)',\n        pointHoverBorderColor: 'rgba(235,75,53, 1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: property.N.data,\n      },\n    ],\n  };\n}\n\nfunction chartOptionsFactory() {\n  return {\n    scales: {\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Year',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Area (Mha)',\n          },\n        },\n      ],\n    },\n    tooltips: {\n      mode: 'label',\n      callbacks: {\n        label: function (tooltipItem: any, data: any) {\n          const label = data.datasets[tooltipItem.datasetIndex].label || '';\n          const value = tooltipItem.yLabel\n            .toFixed(2)\n            .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n          return `${label}: ${value}`;\n        },\n      },\n    },\n  };\n}\n\nexport default function Report({ open, properties, onClose }: ReportProps) {\n  const [scroll] = React.useState<DialogProps['scroll']>('paper');\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n\n  const scenariosNames = ['N', 'F'];\n  const labels = [\n    '2000',\n    '2005',\n    '2010',\n    '2015',\n    '2020',\n    '2025',\n    '2030',\n    '2035',\n    '2040',\n    '2045',\n    '2050',\n  ];\n\n  const datasetNames = ['Soy', 'Crp', 'Grs', 'Nati', 'CNat'];\n  const datasetLabels = [\n    'Soybean',\n    'Cropland',\n    'Grassland',\n    'Native Vegetation',\n    'Native Vegetation Conversion',\n  ];\n\n  const charts: any = [];\n  if (properties) {\n    const datasets = datasetsFactory(properties, scenariosNames, labels);\n    datasetNames.forEach((selectedName: string, index: number) => {\n      const name = datasetLabels[index];\n      charts.push({\n        name,\n        data: chartDataFactory(selectedName, datasets),\n        options: chartOptionsFactory(),\n      });\n    });\n  }\n\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  return (\n    <Dialog\n      fullWidth={true}\n      maxWidth={'sm'}\n      open={open}\n      onClose={onClose}\n      scroll={scroll}\n      aria-labelledby=\"scroll-dialog-title\"\n      aria-describedby=\"scroll-dialog-description\"\n    >\n      <DialogTitle id=\"scroll-dialog-title\">{properties?.name}</DialogTitle>\n      <DialogContent dividers={scroll === 'paper'}>\n        {charts.map((entry: { name: string; data: any; options: any }) => {\n          return (\n            <div key={entry.name}>\n              <Typography\n                id=\"alert-dialog-title\"\n                variant=\"h6\"\n                gutterBottom\n                align=\"justify\"\n              >\n                {entry.name}\n              </Typography>\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Nihil\n                ratione sit iusto voluptate excepturi ex nam reprehenderit\n                voluptatum est laboriosam corporis delectus ab placeat\n                assumenda, nobis sapiente quos, dolorem earum?\n              </Typography>\n              <Line data={entry.data} options={entry.options} />\n            </div>\n          );\n        })}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport {\n  withStyles,\n  makeStyles,\n  Theme,\n  createStyles,\n} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport {\n  Card,\n  FormControlLabel,\n  IconButton,\n  Switch,\n  Typography,\n} from '@material-ui/core';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport debounce from 'lodash.debounce';\nimport { useDispatch, useTrackedState } from 'store';\nimport { TimelineOption } from 'containers/Types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      position: 'fixed',\n      zIndex: 1199,\n      display: 'flex',\n      bottom: '16px',\n      justifyContent: 'center',\n      [theme.breakpoints.down('xs')]: {\n        width: '100%',\n        left: 0,\n        bottom: 0,\n      },\n    },\n    slider: {\n      width: 500 + theme.spacing(3) * 2,\n      display: 'block',\n      background: '#fff',\n      padding: '8px 26px 0',\n    },\n    switch: {\n      marginLeft: 0,\n    },\n    content: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    icon: {\n      marginRight: '24px',\n    },\n    margin: {\n      height: theme.spacing(3),\n    },\n  }),\n);\n\nconst TempShadow =\n  '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst marks = [\n  {\n    value: 0,\n    label: '2000',\n  },\n  {\n    value: 10,\n    label: '2005',\n  },\n  {\n    value: 20,\n    label: '2010',\n  },\n  {\n    value: 30,\n    label: '2015',\n  },\n  {\n    value: 40,\n    label: '2020',\n  },\n  {\n    value: 50,\n    label: '2025',\n  },\n  {\n    value: 60,\n    label: '2030',\n  },\n  {\n    value: 70,\n    label: '2035',\n  },\n  {\n    value: 80,\n    label: '2040',\n  },\n  {\n    value: 90,\n    label: '2045',\n  },\n  {\n    value: 100,\n    label: '2050',\n  },\n];\n\nconst TemporalSlider = withStyles({\n  root: {\n    color: '#757575',\n    height: 2,\n    padding: '16px 0',\n  },\n  thumb: {\n    height: 28,\n    width: 28,\n    backgroundColor: '#fff',\n    boxShadow: TempShadow,\n    marginTop: -14,\n    marginLeft: -14,\n    '&:focus, &:hover, &$active': {\n      boxShadow:\n        '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: TempShadow,\n      },\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 12px)',\n    top: -18,\n    '& *': {\n      background: 'transparent',\n      color: '#000',\n    },\n  },\n  track: {\n    height: 2,\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: '#bfbfbf',\n  },\n  mark: {\n    backgroundColor: '#bfbfbf',\n    height: 8,\n    width: 1,\n    marginTop: -3,\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor',\n  },\n})(Slider);\n\nexport default function Temporal() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const state = useTrackedState();\n\n  const [sliderValue, setSliderValue] = React.useState<number | number[]>(0);\n  const [switchState, setSwitchState] = React.useState({\n    checkedA: false,\n    checkedB: true,\n  });\n  const [buttonDisabled, setButtonDisabled] = React.useState<boolean>(false);\n\n  const handleChangeSwitch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const checked = event.target.checked;\n    if (checked) {\n      dispatch({\n        type: 'SET_TIMELINE_OPTION',\n        option: TimelineOption.DIFFERENCE,\n      });\n    } else {\n      dispatch({\n        type: 'SET_TIMELINE_OPTION',\n        option: TimelineOption.ABSOLUTE,\n      });\n    }\n\n    setSwitchState({ ...switchState, [event.target.name]: checked });\n  };\n\n  const getSwitchLabel = (): string => {\n    return state.currentTimelineOption.valueOf();\n  };\n\n  const handleClickPlay = () => {\n    setButtonDisabled(true);\n\n    const indexMark = marks.findIndex((mark) => mark.value === sliderValue);\n    if (indexMark > -1) {\n      let index = 0;\n\n      const sliderEvent = { timeline: true };\n      handleChangeSlider(sliderEvent, 0);\n\n      const timelineInterval = setInterval(() => {\n        const position = marks[index];\n        handleChangeSlider(sliderEvent, position.value);\n\n        index++;\n        if (index > indexMark) {\n          clearInterval(timelineInterval);\n          setButtonDisabled(false);\n        }\n      }, 500);\n    }\n  };\n\n  const handleChangeSlider = (\n    event: any,\n    newSliderValue: number | number[],\n  ) => {\n    if ((event && event.timeline) || sliderValue !== newSliderValue) {\n      setSliderValue(newSliderValue);\n\n      const debounceSlider = debounce(() => {\n        const mark = marks.find((mark) => mark.value === newSliderValue);\n        if (mark) {\n          dispatch({ type: 'SET_CURRENT_YEAR', year: Number(mark.label) });\n        }\n      }, 300);\n\n      debounceSlider();\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.slider}>\n        <Typography gutterBottom></Typography>\n\n        <FormControlLabel\n          className={classes.switch}\n          control={\n            <Switch\n              size=\"small\"\n              checked={switchState.checkedA}\n              onChange={handleChangeSwitch}\n              name=\"checkedA\"\n              color=\"primary\"\n            />\n          }\n          label={getSwitchLabel()}\n        />\n\n        <div className={classes.content}>\n          <IconButton\n            aria-label=\"play\"\n            className={classes.icon}\n            disabled={buttonDisabled}\n            onClick={handleClickPlay}\n          >\n            <PlayArrowIcon />\n          </IconButton>\n          <TemporalSlider\n            aria-label=\"slider\"\n            value={sliderValue}\n            step={null}\n            marks={marks}\n            valueLabelDisplay=\"off\"\n            disabled={buttonDisabled}\n            onChange={handleChangeSlider}\n          />\n        </div>\n      </Card>\n    </div>\n  );\n}\n","import { State } from 'store';\nimport { View, ViewType } from 'containers/Types';\n\nexport const filter = (state: State, viewType: ViewType): View[] => {\n  return state.views.filter((view: View) => view.type === viewType);\n};\n\nexport const filterByName = (\n  state: State,\n  viewType: ViewType,\n  name: string,\n): View | undefined => {\n  return state.views.find(\n    (view: View) => view.type === viewType && view.name === name,\n  );\n};\n","import biomesLabels from 'assets/biomes-forest-code-labels.json';\nimport biomes from 'assets/biomes-forest-code.json';\nimport brazilLabels from 'assets/brazil-forest-code-labels.json';\nimport brazil from 'assets/brazil-forest-code.json';\nimport { View, ViewType } from 'containers/Types';\n\nconst scenarios: any = {\n  FC: `\n  Attempt to capture the future impacts of all key provisions of a\n  rigorously enforced Brazil's Forest Code\n  `,\n  NoFC: `Allow both legal and illegal deforestation at all times, which is\n  driven by the demand for agricultural commodities, and does not include\n  any policy restrictions`,\n};\n\nconst attributes: any = {\n  Soybean: 'Lorem',\n  Cropland: `Planted areas with the following crops:\n  barley, dry beans, cassava, corn, cotton, groundnut, palm oil, potato,\n  rice, sorghum, soybeans, sugarcane, sweet potato, wheat`,\n  Grassland: 'Pasture areas used for livestock ranching',\n  'Native Vegetation': 'Native vegetation including rainforest and savannas',\n};\n\nconst borders: any = {\n  Biomes: 'Lorem',\n  Brazil: 'Lorem',\n};\n\nconst backgrounds: any = {\n  DS: 'Downscaling (1x1Km at Equator)',\n  CR: 'ColRow (50x50km at Equator)',\n  LU: 'Large Unit (200x200Km at Equator)',\n};\n\nexport class FeatureService {\n  private static instance: FeatureService;\n\n  private constructor() {}\n\n  public static getInstance(): FeatureService {\n    if (!FeatureService.instance) {\n      FeatureService.instance = new FeatureService();\n    }\n\n    return FeatureService.instance;\n  }\n\n  public getScenarios(): Promise<View[]> {\n    return new Promise((resolve: any) => {\n      let firstVisible = true;\n      const views = Object.keys(scenarios).map((scenario) => {\n        const isViewVisible = firstVisible;\n        firstVisible = false;\n        return {\n          name: scenario,\n          type: ViewType.SCENARIO,\n          description: scenarios[scenario],\n          visible: isViewVisible,\n        };\n      });\n\n      resolve(views);\n    });\n  }\n\n  public getAttriburesBiomes(): Promise<View[]> {\n    return new Promise((resolve: any) => {\n      let firstVisible = true;\n      const views = Object.keys(attributes).map((attribute) => {\n        const isViewVisible = firstVisible;\n        firstVisible = false;\n        return {\n          name: attribute,\n          type: ViewType.ATTRIBUTE,\n          description: attributes[attribute],\n          visible: isViewVisible,\n          data: biomesLabels as GeoJSON.GeoJsonObject,\n        };\n      });\n\n      resolve(views);\n    });\n  }\n\n  public getAttributesBrazil(): Promise<View[]> {\n    return new Promise((resolve: any) => {\n      let firstVisible = true;\n      const views = Object.keys(attributes).map((attribute) => {\n        const isViewVisible = firstVisible;\n        firstVisible = false;\n        return {\n          name: attribute,\n          type: ViewType.ATTRIBUTE,\n          description: attributes[attribute],\n          visible: isViewVisible,\n          data: brazilLabels as GeoJSON.GeoJsonObject,\n        };\n      });\n\n      resolve(views);\n    });\n  }\n\n  public getBorders(): Promise<View[]> {\n    return new Promise((resolve: any) => {\n      const views = [\n        {\n          name: 'None',\n          type: ViewType.BORDER,\n          description: 'No data',\n          visible: true,\n        },\n        {\n          name: 'Biomes',\n          type: ViewType.BORDER,\n          description: borders['Biomes'],\n          visible: false,\n          data: biomes as GeoJSON.GeoJsonObject,\n        },\n        {\n          name: 'Brazil',\n          type: ViewType.BORDER,\n          description: borders['Brazil'],\n          visible: false,\n          data: brazil as GeoJSON.GeoJsonObject,\n        },\n      ];\n\n      resolve(views);\n    });\n  }\n\n  public getBackgrounds(): Promise<View[]> {\n    return new Promise((resolve: any) => {\n      const views = Object.keys(backgrounds).map((background) => {\n        return {\n          name: background,\n          type: ViewType.BACKGROUND,\n          description: backgrounds[background],\n          visible: false,\n          url: `${process.env.PUBLIC_URL}/wms/${background}/{z}/{x}/{y}.png`,\n        };\n      });\n\n      const none: any = {\n        name: 'None',\n        type: ViewType.BACKGROUND,\n        description: 'No data',\n        visible: true,\n      };\n\n      views.unshift(none);\n      resolve(views);\n    });\n  }\n}\n","import L from 'leaflet';\n\nconst iconPositive = new L.Icon({\n  iconUrl: require('../../assets/img/arrow_upward-black-18dp.svg'),\n  iconSize: [16, 16],\n  iconAnchor: [8, 2],\n});\n\nconst iconNegative = new L.Icon({\n  iconUrl: require('../../assets/img/arrow_downward-black-18dp.svg'),\n  iconSize: [16, 16],\n  iconAnchor: [8, 2],\n});\n\nconst iconEquals = new L.Icon({\n  iconUrl: require('../../assets/img/brightness_1-24px.svg'),\n  iconSize: [8, 8],\n  iconAnchor: [4, 0],\n});\n\nexport { iconPositive, iconNegative, iconEquals };\n","import Legend from 'components/Legend';\nimport Report from 'components/Report';\nimport Temporal from 'components/Temporal';\nimport {\n  MapProperties,\n  TimelineOption,\n  View,\n  ViewType,\n} from 'containers/Types';\nimport { Layer } from 'leaflet';\nimport React from 'react';\nimport {\n  GeoJSON,\n  Map,\n  Marker,\n  TileLayer,\n  Tooltip,\n  ZoomControl,\n} from 'react-leaflet';\nimport { useDispatch, useTrackedState } from 'store';\nimport { filter } from 'store/utils';\n\nimport { FeatureService } from './feature.service';\nimport { iconEquals, iconNegative, iconPositive } from './icons';\n\nimport brazilLabels from 'assets/brazil-forest-code-labels.json';\n\nconst defaultProperties = {\n  lat: -14.35143,\n  lng: -49.01675,\n  zoom: 4,\n  color: {\n    key: 'any',\n    value: {\n      default: {\n        color: '#1f2021',\n        weight: 1,\n        fillOpacity: 0.5,\n        fillColor: '#fff2af',\n      },\n    },\n  },\n} as MapProperties;\n\nconst userDefinedProperties = {\n  lat: -14.35143,\n  lng: -49.01675,\n  zoom: 4,\n  color: {\n    key: 'name',\n    value: {\n      'Atlantic Forest': {\n        color: defaultProperties.color.value.default.color,\n        weight: defaultProperties.color.value.default.weight,\n        fillOpacity: defaultProperties.color.value.default.fillOpacity,\n        fillColor: '#d7fcae',\n      },\n      Pampa: {\n        color: defaultProperties.color.value.default.color,\n        weight: defaultProperties.color.value.default.weight,\n        fillOpacity: defaultProperties.color.value.default.fillOpacity,\n        fillColor: '#fcefd4',\n      },\n      Pantanal: {\n        color: defaultProperties.color.value.default.color,\n        weight: defaultProperties.color.value.default.weight,\n        fillOpacity: defaultProperties.color.value.default.fillOpacity,\n        fillColor: '#ffe7ff',\n      },\n      Amazonia: {\n        color: defaultProperties.color.value.default.color,\n        weight: defaultProperties.color.value.default.weight,\n        fillOpacity: defaultProperties.color.value.default.fillOpacity,\n        fillColor: '#b2ff1b',\n      },\n      Caatinga: {\n        color: defaultProperties.color.value.default.color,\n        weight: defaultProperties.color.value.default.weight,\n        fillOpacity: defaultProperties.color.value.default.fillOpacity,\n        fillColor: '#feffb1',\n      },\n      Cerrado: {\n        color: defaultProperties.color.value.default.color,\n        weight: defaultProperties.color.value.default.weight,\n        fillOpacity: defaultProperties.color.value.default.fillOpacity,\n        fillColor: '#ffc6b2',\n      },\n    },\n  },\n} as MapProperties;\n\nfunction geoJSONStyle(feature?: GeoJSON.Feature) {\n  let style = defaultProperties.color.value.default;\n\n  if (feature) {\n    const properties = feature.properties as any;\n    const key = userDefinedProperties.color.key;\n    const value = userDefinedProperties.color.value;\n    if (properties.hasOwnProperty(key)) {\n      const propertyValue = properties[key];\n      if (value.hasOwnProperty(propertyValue)) {\n        style = value[propertyValue];\n      }\n    }\n  }\n\n  return style;\n}\n\nexport default function Leaflet() {\n  const dispatch = useDispatch();\n  const state = useTrackedState();\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n\n  const [\n    featureSelected,\n    setFeatureSelected,\n  ] = React.useState<GeoJSON.Feature | null>(null);\n\n  const onEachFeature = (feature: GeoJSON.Feature, layer: Layer) => {\n    layer.on('click', () => {\n      setDialogOpen(true);\n      setFeatureSelected(feature);\n    });\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const loadGeoJSON = (views: View[]): JSX.Element[] => {\n    return views\n      .filter((view?: View) => view && view.data && view.visible)\n      .map((view?: View) => {\n        return (\n          <GeoJSON\n            key={view!.name}\n            data={view!.data!}\n            style={geoJSONStyle}\n            onEachFeature={onEachFeature}\n          />\n        );\n      });\n  };\n\n  const loadTileLayer = (views: View[]): JSX.Element[] => {\n    return views\n      .filter((view?: View) => view && view.url && view.visible)\n      .map((view?: View) => {\n        return (\n          <TileLayer\n            url={view!.url!}\n            opacity={1}\n            zIndex={3000}\n            minZoom={3}\n            maxZoom={4}\n            tms={false}\n            attribution='&copy; <a href=\"https://iopscience.iop.org/article/10.1088/1748-9326/aaccbb\" target=\"_blank\" rel=\"noopener noreferrer\">Soterroni et al. (2018)</a>'\n          />\n        );\n      });\n  };\n\n  const loadAttributes = (views: View[]): JSX.Element[] => {\n    const layers: JSX.Element[] = [];\n\n    views.forEach((view) => {\n      if (view && view.data && view.visible) {\n        let geojson = { ...view.data } as any;\n\n        // TODO deixar mais generico\n        if (state.currentBorder && state.currentBorder === 'Brazil') {\n          geojson = brazilLabels as GeoJSON.GeoJsonObject;\n        }\n\n        for (const feature of geojson.features) {\n          const properties = feature.properties;\n\n          const geometry = feature.geometry;\n          const lat = geometry.coordinates[1];\n          const lng = geometry.coordinates[0];\n          const coords: any = [lat, lng];\n\n          if (\n            state.currentScenario &&\n            state.currentAttribute &&\n            state.currentYear\n          ) {\n            const attributesMapper: any = {\n              Soybean: 'Soy',\n              Cropland: 'Crp',\n              Grassland: 'Grs',\n              'Native Vegetation': 'Nati',\n              'Native Vegetation Conversion': 'CNat',\n            };\n\n            if (attributesMapper.hasOwnProperty(state.currentAttribute)) {\n              const scenario = state.currentScenario[0];\n              const attribute = attributesMapper[state.currentAttribute];\n\n              const fieldName = `${scenario}${attribute}${state.currentYear}`;\n              const fieldValue = properties[fieldName];\n              const fieldResult = properties[`R${fieldName}`];\n\n              let tooltipValue = fieldValue\n                .toFixed(2)\n                .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n              if (TimelineOption.DIFFERENCE === state.currentTimelineOption) {\n                const fieldDiff = Number(properties[`D${fieldName}`]);\n\n                tooltipValue = fieldDiff\n                  .toFixed(2)\n                  .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n              }\n\n              let iconSelected = iconEquals;\n              if (fieldResult === 'positive') {\n                iconSelected = iconPositive;\n              } else if (fieldResult === 'negative') {\n                iconSelected = iconNegative;\n              }\n\n              layers.push(\n                <Marker\n                  key={new Date().getTime() + Math.random()}\n                  position={coords}\n                  icon={iconSelected}\n                >\n                  <Tooltip\n                    className={'marker-class-name'}\n                    direction={'bottom'}\n                    offset={[0, 20]}\n                    opacity={0.9}\n                    permanent\n                  >\n                    {`${tooltipValue}`}\n                  </Tooltip>\n                </Marker>,\n              );\n            }\n          }\n        }\n      }\n    });\n\n    return layers;\n  };\n\n  React.useEffect(() => {\n    const featureService = FeatureService.getInstance();\n\n    featureService.getAttriburesBiomes().then((views: View[]) => {\n      views.forEach((view: View) => dispatch({ type: 'ADD_VIEW', view }));\n    });\n\n    featureService.getScenarios().then((views: View[]) => {\n      views.forEach((view: View) => dispatch({ type: 'ADD_VIEW', view }));\n    });\n\n    featureService.getBorders().then((views: View[]) => {\n      views.forEach((view: View) => dispatch({ type: 'ADD_VIEW', view }));\n    });\n\n    featureService.getBackgrounds().then((views: View[]) => {\n      views.forEach((view: View) => dispatch({ type: 'ADD_VIEW', view }));\n    });\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Map\n        id=\"mapId\"\n        center={userDefinedProperties}\n        zoom={userDefinedProperties.zoom}\n        zoomControl={false}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n\n        <ZoomControl position=\"bottomright\" />\n\n        {loadGeoJSON(filter(state, ViewType.BORDER))}\n        {loadAttributes(filter(state, ViewType.ATTRIBUTE))}\n        {loadTileLayer(filter(state, ViewType.BACKGROUND))}\n      </Map>\n      <Legend mapProperties={userDefinedProperties} />\n      <Report\n        open={dialogOpen}\n        properties={featureSelected?.properties}\n        onClose={handleDialogClose}\n      />\n      <Temporal></Temporal>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport Leaflet from 'components/Leaflet';\n\nexport default function Main() {\n  return (\n    <div>\n      <Leaflet />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  SvgIcon,\n} from '@material-ui/core';\n\ntype SidebarItemProps = {\n  text: string;\n  icon: typeof SvgIcon;\n};\n\nexport default function SidebarItem({ text, icon }: SidebarItemProps) {\n  const CustomIcon = icon;\n\n  return (\n    <ListItem button>\n      <ListItemIcon>\n        <CustomIcon />\n      </ListItemIcon>\n      <ListItemText primary={text} />\n    </ListItem>\n  );\n}\n","import React from 'react';\n\nimport { List } from '@material-ui/core';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport MapIcon from '@material-ui/icons/Map';\n\nimport SidebarItem from './SidebarItem';\n\nexport default function SidebarList() {\n  return (\n    <List>\n      <SidebarItem text=\"Views\" icon={LayersIcon}></SidebarItem>\n      <SidebarItem text=\"Legend\" icon={MapIcon}></SidebarItem>\n    </List>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport Logo from '../../assets/img/restore-logo.png';\nimport BMULogo from '../../assets/img/bmu-logo.png';\n\ntype ResumeProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonDefault: {\n      backgroundColor: '#24806F',\n      color: '#ffffff',\n      '&:hover': {\n        backgroundColor: '#24806F',\n      },\n    },\n    imgContent: {\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'row',\n      marginBottom: 8,\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n        marginBottom: 16,\n      },\n    },\n    imgBMULogo: {\n      height: 120,\n      marginBottom: 0,\n      [theme.breakpoints.down('xs')]: {\n        marginBottom: 16,\n      },\n    },\n    imgLogo: {\n      marginLeft: 24,\n      [theme.breakpoints.down('xs')]: {\n        marginLeft: 0,\n      },\n      height: 30,\n    },\n    contentDialogTitile: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    },\n  }),\n);\n\nexport default function Resume({ open, onClose }: ResumeProps) {\n  const classes = useStyles();\n  const [scroll] = React.useState<DialogProps['scroll']>('paper');\n\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  return (\n    <div>\n      <Dialog\n        fullWidth={true}\n        maxWidth={'md'}\n        open={open}\n        onClose={onClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\">\n          <div className={classes.contentDialogTitile}>\n            Future environmental and agricultural impacts of Brazil’s Forest\n            Code\n            <img src={Logo} className={classes.imgLogo} alt=\"Restore+ logo\" />\n          </div>\n        </DialogTitle>\n\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n            align={'justify'}\n            style={{ marginBottom: '0' }}\n          >\n            This application presents the main results of the article{' '}\n            <strong>\n              <a\n                href=\"https://iopscience.iop.org/article/10.1088/1748-9326/aaccbb\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {' '}\n                Soterroni et al. Future environmental and agricultural impacts\n                of Brazil’s Forest Code, Environmental Research Letters, 13(7),\n                p.074021 (2018)\n              </a>\n            </strong>\n            . It shows two scenarios: FC and NoFC. FC is a command-and-control\n            scenario that attempts to capture the future impacts of all key\n            provisions of a rigorously enforced Brazil’s Forest Code. It\n            includes the full control of illegal deforestation after 2010, the\n            amnesty of LR debts for small farms (SFA) before 2010, the\n            environmental reserve quota mechanism after 2020, and the mandatory\n            restoration of LR debts after 2020. Legal deforestation or\n            conversion of LR surpluses is allowed at all times in all biomes,\n            with the exception of the Atlantic Forest, which is protected by\n            more restrictive legislation. The LR debts not waived by the SFA are\n            fully paid by the farm owner, either by purchasing CRA quotas from\n            the LR surpluses in the same biome or by taking illegally converted\n            areas out of agricultural production for native vegetation\n            restoration. The no forest code (NoFC) scenario allows both legal\n            and illegal deforestation at all times, which is driven by the\n            demand for agricultural commodities, and does not include any policy\n            restrictions. You can download the data used in this application by{' '}\n            <a\n              href=\"https://www.dropbox.com/s/aj1rwz3bu9td66n/restoreplus.zip?raw=1\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              clicking here\n            </a>\n            .\n          </DialogContentText>\n\n          <div className={classes.imgContent}>\n            <img\n              src={BMULogo}\n              className={classes.imgBMULogo}\n              alt=\"Restore+ logo\"\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} className={classes.buttonDefault}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Chip, Tooltip } from '@material-ui/core';\n\nexport type SideChipProps = {\n  label: string;\n  active: boolean;\n  tooltip: string;\n  className: string;\n  backgroundColorOnActive: string;\n  onClick?: (props: SideChipProps) => void;\n};\n\nexport default function SideChip(props: SideChipProps) {\n  const [active, setActive] = React.useState(props.active);\n\n  const getStyle = (): any => {\n    const styleOn = {\n      backgroundColor: props.backgroundColorOnActive,\n      color: '#fff',\n      border: props.backgroundColorOnActive,\n    };\n\n    return props.active ? styleOn : {};\n  };\n\n  const internalHandleClick = () => {\n    let newActive = !active;\n    if (props.active === false && newActive === false) {\n      newActive = true;\n    }\n\n    setActive(newActive);\n\n    if (props.onClick) {\n      props!.onClick({ ...props, active: newActive });\n    }\n  };\n\n  return (\n    <Tooltip title={props.tooltip} arrow>\n      <Chip\n        label={props.label}\n        onClick={internalHandleClick}\n        variant=\"outlined\"\n        style={{\n          ...getStyle(),\n        }}\n        className={props.className}\n      />\n    </Tooltip>\n  );\n}\n","import React from 'react';\n\nimport { useDispatch, useTrackedState } from 'store';\nimport SideChip, { SideChipProps } from './SideChip';\nimport { View, ViewType } from 'containers/Types';\nimport { filter } from 'store/utils';\n\ntype SideChipListProps = {\n  viewType: ViewType;\n  className: string;\n  backgroundColorOnActive: string | { [name: string]: string };\n};\n\nexport default function SideChipList(props: SideChipListProps) {\n  const dispatch = useDispatch();\n  const state = useTrackedState();\n\n  const getBackgroundColor = (name: string) => {\n    let backgroundColorOnActive = '';\n\n    if (typeof props.backgroundColorOnActive === 'string') {\n      backgroundColorOnActive = props.backgroundColorOnActive;\n    } else if (props.backgroundColorOnActive.hasOwnProperty(name)) {\n      backgroundColorOnActive = props.backgroundColorOnActive[name];\n    }\n\n    return backgroundColorOnActive;\n  };\n\n  const getChips = (): SideChipProps[] => {\n    return filter(state, props.viewType).map((view: View) => {\n      return {\n        label: view.name,\n        active: view.visible,\n        tooltip: view.description,\n        className: props.className,\n        backgroundColorOnActive: getBackgroundColor(view.name),\n      };\n    });\n  };\n\n  const handleClick = (data: SideChipProps) => {\n    dispatch({\n      type: 'TOGGLE_VIEW',\n      viewType: props.viewType,\n      name: data.label,\n      visible: data.active,\n    });\n  };\n\n  return (\n    <div>\n      {getChips().map((chip: SideChipProps) => (\n        <SideChip\n          key={chip.label}\n          label={chip.label}\n          active={chip.active}\n          tooltip={chip.tooltip}\n          className={chip.className}\n          backgroundColorOnActive={chip.backgroundColorOnActive}\n          onClick={handleClick}\n        />\n      ))}\n    </div>\n  );\n}\n","import './style.scss';\n\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { ViewType } from 'containers/Types';\nimport React from 'react';\n\nimport SideChipList from './SideChipList';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 275,\n      position: 'absolute',\n      zIndex: 1200,\n      left: 56,\n      height: '100%',\n    },\n    cardContent: {\n      padding: '86px 16px',\n    },\n    main: {\n      width: '100%',\n    },\n    customAccordionSummary: {\n      padding: '0px 8px',\n    },\n    customAccordionDetails: {\n      flexWrap: 'wrap',\n      padding: 8,\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(16),\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n    chipSpacing: {\n      margin: '2px 4px',\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      marginLeft: '12px',\n    },\n  }),\n);\n\nexport default function SideContent() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.cardContent}>\n        <div className={classes.main}>\n          <Accordion defaultExpanded={true}>\n            <AccordionSummary\n              className={classes.customAccordionSummary}\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography className={classes.heading}>Scenario</Typography>\n            </AccordionSummary>\n            <AccordionDetails className={classes.customAccordionDetails}>\n              <SideChipList\n                viewType={ViewType.SCENARIO}\n                className={classes.chipSpacing}\n                backgroundColorOnActive={{ FC: '#008000', NoFC: '#EB4B35' }}\n              />\n            </AccordionDetails>\n          </Accordion>\n\n          <Accordion defaultExpanded={true}>\n            <AccordionSummary\n              className={classes.customAccordionSummary}\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2a-content\"\n              id=\"panel2a-header\"\n            >\n              <Typography className={classes.heading}>Attribute</Typography>\n            </AccordionSummary>\n            <AccordionDetails className={classes.customAccordionDetails}>\n              <SideChipList\n                viewType={ViewType.ATTRIBUTE}\n                className={classes.chipSpacing}\n                backgroundColorOnActive={'#757575'}\n              />\n            </AccordionDetails>\n          </Accordion>\n\n          <Accordion defaultExpanded={true}>\n            <AccordionSummary\n              className={classes.customAccordionSummary}\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel3a-content\"\n              id=\"panel3a-header\"\n            >\n              <Typography className={classes.heading}>Border</Typography>\n            </AccordionSummary>\n            <AccordionDetails className={classes.customAccordionDetails}>\n              <SideChipList\n                viewType={ViewType.BORDER}\n                className={classes.chipSpacing}\n                backgroundColorOnActive={'#757575'}\n              />\n            </AccordionDetails>\n          </Accordion>\n\n          <Accordion defaultExpanded={true}>\n            <AccordionSummary\n              className={classes.customAccordionSummary}\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel3a-content\"\n              id=\"panel3a-header\"\n            >\n              <Typography className={classes.heading}>Background</Typography>\n            </AccordionSummary>\n            <AccordionDetails className={classes.customAccordionDetails}>\n              <SideChipList\n                viewType={ViewType.BACKGROUND}\n                className={classes.chipSpacing}\n                backgroundColorOnActive={'#757575'}\n              />\n            </AccordionDetails>\n          </Accordion>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\n\nimport clsx from 'clsx';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  useTheme,\n} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Button from '@material-ui/core/Button';\n\nimport Main from 'layouts/Main';\nimport SidebarList from './SidebarList';\nimport { Icon } from '@material-ui/core';\nimport Resume from 'components/Resume';\nimport SideContent from 'components/SideContent';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 24,\n      '& > span': {\n        marginLeft: '-8px',\n      },\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(7) + 4,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(0),\n    },\n    contentInfo: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n    contentInfoText: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    subtitle: {\n      marginLeft: '24px',\n      display: 'block',\n      [theme.breakpoints.down('sm')]: {\n        display: 'none',\n      },\n    },\n  }),\n);\n\nexport default function Sidebar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [resumeOpen, setResumeOpen] = React.useState(\n    process.env.NODE_ENV === 'production',\n  );\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleResumeOpen = () => {\n    setResumeOpen(true);\n  };\n\n  const handleResumeClose = () => {\n    setResumeOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <div className={classes.contentInfo}>\n            <div className={classes.contentInfoText}>\n              <Typography variant=\"h6\">RESTORE+</Typography>\n              <Typography variant=\"subtitle1\" className={classes.subtitle}>\n                Future environmental and agricultural impacts of Brazil’s Forest\n                Code\n              </Typography>\n            </div>\n            <div>\n              <Button onClick={handleResumeOpen} color=\"inherit\">\n                About <Icon style={{ marginLeft: 8 }}>info_outlined</Icon>\n              </Button>\n            </div>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n\n        <SidebarList />\n      </Drawer>\n\n      <SideContent></SideContent>\n\n      <Resume open={resumeOpen} onClose={handleResumeClose}></Resume>\n      <main className={classes.content}>\n        <Main />\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { Provider } from 'store';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core';\nimport Sidebar from 'layouts/Sidebar';\n\nexport default function App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#212121',\n      },\n      secondary: {\n        main: '#FEBF0F',\n      },\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider>\n        <Sidebar />\n      </Provider>\n    </ThemeProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'styles/index.scss';\nimport * as serviceWorker from 'serviceWorker';\n\nimport App from 'layouts/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}